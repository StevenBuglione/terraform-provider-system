---
# generated by https://github.com/hashicorp/terraform-plugin-docs
page_title: "{{.Name}} | {{.Type}} | {{.ProviderName}}"
name: "{{.Name}}"
type: "{{.Type}}"
subcategory: ""
description: |-
{{ .Description | plainmarkdown | trimspace | prefixlines "  " }}
---

# {{.Type}}: {{.Name}}

{{ .Description | trimspace }}

## Usage

### Start a service

This example ensures that the systemd service `nginx` is started. The service must exist.

```terraform
resource "system_service_systemd" "nginx" {
  name    = "nginx"
  status  = "started"
}
```

### Enable a service

This example ensures that the systemd service `nginx` is enabled and started. The service must exist.

```terraform
resource "system_service_systemd" "nginx" {
  name    = "nginx"
  enabled = true
}
```

### Create, enable, and start a service

This example creates an systemd service unit `busybox-httpd.service` using the `system_file` resource and subsequently enables and starts the service using the `system_service_system`. The service starts a busybox httpd daemon.

```terraform
resource "system_file" "busybox_httpd" {
  path    = "/etc/systemd/system/busybox-httpd.service"
  mode    = 644
  user    = "root"
  group   = "root"
  content = <<EOT
[Unit]
Description=BusyBox web server
After=network.target

[Service]
Type=forking
User=www-data
Group=www-data
ExecStartPre=+/bin/mkdir -p /var/www/html
ExecStartPre=+/bin/chown www-data:www-data /var/www/html
ExecStart=/bin/busybox httpd -p 8080 -h /var/www/html

[Install]
WantedBy=multi-user.target
EOT
}

resource "system_service_systemd" "busybox_httpd" {
  name    = trimsuffix(system_file.busybox_httpd.basename, ".service")
  enabled = true
  status  = "started"
}
```

## Notes

This section describes general notes for using the `system_service_systemd` resource.

- The service unit must exist.
- The resource does not manage, create, or delete the service unit.
- The resource remembers the `enabled` state and the `status` state at the time the resource is created. This state is referred to as the *original state*.
- When the resource is deleted, the service is reverted to the original state.
- Avoid defining multiple `system_service_systemd` resources, which manage the same service in the same Terraform configuration. Instead, merge all attributes in a single `system_service_systemd` resource.

{{ if .HasExample -}}
## Example Usage

{{ printf "{{tffile %q}}" .ExampleFile }}
{{- end }}

{{ .SchemaMarkdown | trimspace }}

{{ if .HasImport -}}
## Import

Import is supported using the following syntax:

{{ printf "{{codefile \"shell\" %q}}" .ImportFile }}
{{- end }}